django

LIBRARY
asgiref==3.5.2
attrs==22.1.0
autobahn==22.7.1
Automat==20.2.0
backports.zoneinfo==0.2.1
certifi==2022.9.14
cffi==1.15.1
channels==3.0.5
charset-normalizer==2.1.1
constantly==15.1.0
cryptography==38.0.1
daphne==3.0.2
defusedxml==0.7.1
Django==4.1.1
django-allauth==0.51.0
django-braces==1.15.0
django-ckeditor==6.5.1
django-cleanup==6.0.0
django-crispy-forms==1.14.0
django-js-asset==2.0.0
hyperlink==21.0.0
idna==3.4
incremental==21.3.0
oauthlib==3.2.1
Pillow==9.2.0
pyasn1==0.4.8
pyasn1-modules==0.2.8
pycparser==2.21
PyJWT==2.5.0
pyOpenSSL==22.0.0
python-dotenv==0.21.0
python3-openid==3.2.0
requests==2.28.1
requests-oauthlib==1.3.1
service-identity==21.1.0
six==1.16.0
sqlparse==0.4.2
Twisted==22.8.0
twisted-iocpsupport==1.0.2
txaio==22.2.1
types-cryptography==3.3.23
typing_extensions==4.3.0
tzdata==2022.2
urllib3==1.26.12
zope.interface==5.4.0




создаем виртуальное окружение чтоб работать только в той области которую мы поставили для проэкта

python -m venv 'имя виртуальной среды'
source 'путь до вирт среды в папку activate'

Запускаем проект с админки

django-admin startproject 'название проекта или папки'

выбираем папку в которой будем работать и настраиваем там виртуальную среду с которой будем работать

устанавливаем 'mkdocs'
Далее мы заходим в дирректорий mkdocs и с помощью команды 'mkdocs serve' запускаем сайт с документацией
устанавливаем дополнительные библиотеки 'mkdocs-awesome-pages-plugin' , 'mkdocs-material', 
    'mkdocs-material-extensions'
чтобы встроить эти библиотеки необходимо запустить 'mkdocs build'
далее опять 'mkdocs serve'



Работаем с файлом settings.py
1. Добавляем вверху файла "# -*- coding utf-8 -*-" для того чтобы можно было писать на русском.

2. Переходим в отладку кода и нажимаем "создать файл launch.json". Сначала выдаст окно нужно нажать "Python", 
а после нажать "Django". Введите в строке "programm" полный путь до указанного файла,
запускаем (может попросить выбрать интерпритатор, выберите вирт. среду). Не расстраиваемся если выдало 
ошибку, сейчас мы это исправим. (советую открыть ссылку в браузере).

3. Набираем команду "python manage.py collectstatic". Если выдает ошибку  
"убедитесь в том что , PYTHONPATHверный и тому подоное" необходимо установить Django в директорий 
файла manage.py, чтобы избежать ошибки. (Установи 4.1.1)


4. настраиваем статические файлы а именно 
    #https://docs.djangoproject.com/en/4.1/ref/settings/#static-root
    STATIC_ROOT=os.path.join(BASE_DIR,'static')

5. запустите файл setting.py чтобы подтвердить действия 

6. Запустите "py manage.py collectstatic". Введите "yes", вы подтвердите, что хотите собрать файлы.     в уроке это ST 

7. Допустим у вас появились файлы, которые не вошли в "STATIC_ROOT". Существует такое же приложение 
    https://docs.djangoproject.com/en/4.1/ref/settings/#staticfiles-dirs
    STATICFILES_DIRS = [
    "/home/special.polls.com/polls/static",
    ]

8. Добавляем последний штрих и дотисываем 
    #https://docs.djangoproject.com/en/4.1/ref/settings/#staticfiles-finders
    STATIC_FINDER = [
        'django.contrib.staticfiles.finders.FileSystemFinder',
        'django.contrib.staticfiles.finders.AppDirectoriesFinder',]

9. Допустим нам необходимо, чтобы пользователь мог фхранить, загружать и обновлять 
медиа файлы разного рода тогда добавим, после "STATIC_FINDER" сточки
"MEDIA_ROOT= os.path.join(BASE_DIR, 'media') # наша папка для всякого рода медиа"
"MEDIA_URL= '/media/' # как она будет отображаться"



Работаем с файлом urls.py
1. Открываем файл "urls.py".

2. После последнего "from" пропишите строчку "from django.conf.urls.static import static".
Если будет подчеркнуто "setting", то пропишите "from django.conf import settings"


3. Добавляем сторку в конце 
"if settings.DEBUG:
    urlpatterns+=static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)".

Чтобы продолжить работать с проектом необходимо провести миграцию:
для этого вводим и запускаем
"py manage.py makemigrations". Должно выдать "No changes detected"      в уроке это MA
"py manage.py migrate". Должны создаться таблицы                        в уроке это MI
                                                                        

В терминале откройте дирректорий файлф "manage.py" и введите "py manage.py createsuperuser".
Это для того чтобы создать учетную запись администратора. 
Елси выдаст ошибку, то лучше провести миграцию еще раз


создаем новый проект
1. заходим в папку проекта и вводим команду "py manage.py startapp 'пишем имя' "

2. необходимо добавить его в "INSTALLED_APPS"

пропишем в "INSTALLED_APPS" установленные библиотеки
необходимо в правильной последовательности вносить туду библиотеки
лучше смотреть в документации как устанавливать библиотеки

1. Начнем с "django_cleanup"

2. Прописываем в "INSTALLED_APPS" 'django_cleanup.apps.CleanupConfig'
(смотрите бывают пишут место расположение библиотеки)



Делаем оформление сайта
с этим нам поможет библиотека "django_crispy_forms"

1. Добавляем в "INSTALLED_APPS" 'crispy_forms'

2. Пописываем в "setting" "CRISPY_TEMPLATE_PACK= 'uni_form'"

3. запускаем статику


!не стоит переименновывать файлы шаблоны


templates воввсем проекте будет находить шаблоны